D1=function(n,alpha,tau1,t)
{
n1=sum(ifelse(t<tau1,1,0))
t1=sort(t)[1:n1]
a=(n1-n)*log(1-tau1^alpha)
b=-sum(log(1-t1^alpha))
return(a+b)
}
D2=function(n,alpha,tau1,tau2,t)
{
n1=sum(ifelse(t<tau1,1,0))
n3=sum(ifelse(t>tau2,1,0))
n2=n-n1-n3
an=n1+1
bn=n1+n2
t2=sort(t)[an:bn]
a=-n3*log(1-tau2^alpha)
b=(n1+n2)*log(1-tau1^alpha)
c=-sum(log(1-t2^alpha))
return(a+b+c)
}
D3=function(n,alpha,tau1,tau2,t)
{
n1=sum(ifelse(t<tau1,1,0))
n3=sum(ifelse(t>tau2,1,0))
n2=n-n1-n3
an=n1+n2+1
bn=n
t3=sort(t)[an:bn]
a=n3*log(1-tau2^alpha)
b=-sum(log(1-t3^alpha))
return(a+b)
}
M=function(n,alpha,tau1,tau2,t)
{
n1=sum(ifelse(t<tau1,1,0))
n3=sum(ifelse(t>tau2,1,0))
n2=n-n1-n3
n.arr=c(n1,n2,n3)
D.arr=c(D1(n,alpha,tau1,t),D2(n,alpha,tau1,tau2,t),D3(n,alpha,tau1,tau2,t))
m=matrix(0,nrow=3,ncol=3)
for(s in 1:3)
{
for(t in 1:3)
{
m[s,t]=sum(D.arr[s:t])/sum(n.arr[s:t])
}
}
return(m)
}
beta=function(n,alpha,tau1,tau2,t)
{
m=M(n,alpha,tau1,tau2,t)
ub1=1/m[1,1]
ub2=1/m[2,2]
ub3=1/m[3,3]
ub=c(ub1,ub2,ub3)
rb1=1/max(m[1,1:3])
rb2=1/min(max(m[1,2:3]),max(m[2,2:3]))
rb3=1/min(m[1:3,3])
rb=c(rb1,rb2,rb3)
return(list("unres.beta"=ub,"res.beta"=rb))
}
