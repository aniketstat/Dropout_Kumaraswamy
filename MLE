# Use the mle() function to obtain both unrestricted and restricted MLEs:

un.pl.alpha=function(n,alpha,tau1,tau2,t)
{
n1=sum(ifelse(t<tau1,1,0))
n3=sum(ifelse(t>tau2,1,0))
n2=n-n1-n3
n.arr=c(n1,n2,n3)
a=n*log(alpha)
b=(alpha-1)*sum(log(t))
c=-sum(log(1-t^alpha))
beta.arr=beta(n,alpha,tau1,tau2,t)$unres.beta
d=sum(n.arr*log(beta.arr))
D.arr=c(D1(n,alpha,tau1,t),D2(n,alpha,tau1,tau2,t),D3(n,alpha,tau1,tau2,t))
e=-sum(beta.arr*D.arr)
return(a+b+c+d+e)
}
res.pl.alpha=function(n,alpha,tau1,tau2,t)
{
n1=sum(ifelse(t<tau1,1,0))
n3=sum(ifelse(t>tau2,1,0))
n2=n-n1-n3
n.arr=c(n1,n2,n3)
a=n*log(alpha)
b=(alpha-1)*sum(log(t))
c=-sum(log(1-t^alpha))
beta.arr=beta(n,alpha,tau1,tau2,t)$res.beta
d=sum(n.arr*log(beta.arr))
D.arr=c(D1(n,alpha,tau1,t),D2(n,alpha,tau1,tau2,t),D3(n,alpha,tau1,tau2,t))
e=-sum(beta.arr*D.arr)
return(a+b+c+d+e)
}
mle=function(t,tau1,tau2)
{
n=length(t)
n1=sum(ifelse(t<tau1,1,0))
n3=sum(ifelse(t>tau2,1,0))
n2=n-n1-n3
t1=sort(t)[1:n1]
an=n1+1
bn=n1+n2
t2=sort(t)[an:bn]
an=n1+n2+1
bn=n
t3=sort(t)[an:bn]
a.init=(mlkumar(t1)[1]+mlkumar(t2)[1]+mlkumar(t3)[1])/3
f1=function(a)
{
-un.pl.alpha(n,a,tau1,tau2,t)
}
a.un.est=optim(a.init,f1)$par
beta.un.est=beta(n,a.un.est,tau1,tau2,t)$unres.beta
un.est=c(a.un.est,beta.un.est)
f2=function(a)
{
-res.pl.alpha(n,a,tau1,tau2,t)
}
a.res.est=optim(a.init,f2)$par
beta.res.est=beta(n,a.res.est,tau1,tau2,t)$res.beta
res.est=c(a.res.est,beta.res.est)
return(list("un.est"=un.est,"res.est"=res.est))
}
